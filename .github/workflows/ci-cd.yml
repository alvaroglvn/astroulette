name: CI-CD

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      secret_key: ${{ secrets.SECRET_KEY }}
      openai_api_key: ${{ secrets.OPENAI_API_KEY }}
      leonardo_api_key: ${{ secrets.LEONARDO_API_KEY }}
      login_key: ${{ secrets.LOGIN_KEY }}
      db_url: ${{ secrets.DB_URL }}
      mailgun_domain: ${{ secrets.MAILGUN_DOMAIN }}
      mailgun_api_key: ${{ secrets.MAILGUN_API_KEY }}
      from_email: ${{ secrets.FROM_EMAIL }}
      frontend_url: http://localhost:5173

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.2"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Format check
        run: |
          black --check .

      - name: Type check
        run: |
          mypy backend/

      - name: Linting
        run: |
          ruff check .

      - name: Safety check
        run: |
          pip-audit

      - name: Run Pytest w/ pytest-order
        run: |
          cd backend
          pytest

  # deploy:
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   concurrency: deploy-group

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Fly
  #       uses: superfly/flyctl-actions/setup-flyctl@master

  #     - name: Set secrets on Fly.io
  #       run: |
  #         flyctl secrets set \
  #           LOGIN_KEY="${{ secrets.LOGIN_KEY }}" \
  #           SECRET_KEY="${{ secrets.SECRET_KEY }}" \
  #           LEONARDO_API_KEY="${{ secrets.LEONARDO_API_KEY }}" \
  #           OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
  #           DB_URL="${{ secrets.DB_URL }}" \
  #           MAILGUN_DOMAIN="${{ secrets.MAILGUN_DOMAIN }}" \
  #           MAILGUN_API_KEY="${{ secrets.MAILGUN_API_KEY }}" \
  #           FROM_EMAIL="${{ secrets.FROM_EMAIL }}"
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  #     - name: Deploy
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #       run: |
  #         flyctl deploy --remote-only
