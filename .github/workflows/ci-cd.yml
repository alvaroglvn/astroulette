name: CI-CD

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      secret_key: ${{ secrets.SECRET_KEY }}
      openai_api_key: ${{ secrets.OPENAI_API_KEY }}
      leonardo_api_key: ${{ secrets.LEONARDO_API_KEY }}
      login_key: ${{ secrets.LOGIN_KEY }}
      db_url: ${{ secrets.DB_URL }}
      mailgun_domain: ${{ secrets.MAILGUN_DOMAIN }}
      mailgun_api_key: ${{ secrets.MAILGUN_API_KEY }}
      from_email: ${{ secrets.FROM_EMAIL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.2"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Format check
        run: |
          pip install black
          black --check .

      - name: Type check
        run: |
          pip install mypy
          mypy app/

      - name: Linting
        run: |
          pip install ruff
          ruff check .

      - name: Safety check
        run: |
          pip install pip-audit
          pip-audit

      - name: Run Pytest w/ pytest-order
        run: |
          pip install pytest-order
          pytest

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    concurrency: deploy-group

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Set secrets on Fly.io
        run: |
          flyctl secrets set \
            LOGIN_KEY="${{ secrets.LOGIN_KEY }}" \
            SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            LEONARDO_API_KEY="${{ secrets.LEONARDO_API_KEY }}" \
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            DB_URL="${{ secrets.DB_URL }}" \
            MAILGUN_DOMAIN="${{ secrets.MAILGUN_DOMAIN }}" \
            MAILGUN_API_KEY="${{ secrets.MAILGUN_API_KEY }}" \
            FROM_EMAIL="${{ secrets.FROM_EMAIL }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy
        run: |
          flyctl deploy --remote-only
